{"version":3,"sources":["components/Navbar/Navbar.js","pages/Portfolio/Portfolio.js","components/Jumbotron/Jumbotron.js","About.js","pages/Contact/Contact.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Portfolio","style","maxWidth","maxHeight","Jumbotron","About","Contact","for","placeholder","rows","Footer","class","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ebc7e5b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Alan Lee\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\"></li>\r\n            <li className=\"nav-item\">\r\n              <Link className='nav-link' to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className='nav-link' to=\"/portfolio\">Portfolio</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className='nav-link' to=\"/contact\">Contact</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport Card from \"../../components/Card\";\r\nimport Card2 from \"../../components/Card2\";\r\nimport \"./Portfolio.css\";\r\n\r\nfunction Portfolio() {\r\n  return (\r\n    <>\r\n      <h3>Projects</h3>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          <div\r\n            className=\"card overflow-auto\"\r\n            style={{ maxWidth: \"80%\", maxHeight: \"80%\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Pokemon Indexer</h5>\r\n              <p className=\"card-text\">\r\n                This application was created as my first project during the\r\n                course. This was our first introduction into API's. The team\r\n                decided to work on something nostalgic so we went with the first\r\n                150 Pokemon using https://pokeapi.co/ notes taken away from this\r\n                project were how calls were made to an API, teamwork, and how\r\n                much focus is required for CSS styling.\r\n              </p>\r\n              <a\r\n                href=\"https://alanhlee.github.io/PokemonIndex/\"\r\n                className=\"card-link\"\r\n              >\r\n                Pokemon Indexer v1.0\r\n              </a>\r\n              <p>\r\n                <a\r\n                  href=\"https://github.com/alanhlee/PokemonIndex/\"\r\n                  className=\"card-link\"\r\n                >\r\n                  Github Repo\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <div\r\n            className=\"card overflow-auto\"\r\n            style={{ maxWidth: \"80%\", maxHeight: \"80%\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">n0tfacebook</h5>\r\n              <p className=\"card-text\">\r\n                For project two, after six weeks into the course, my team and I\r\n                were tasked with creating a fullstack application. Since it was\r\n                an application from start to finish our team decided to not use\r\n                a styling library and create this one all from scratch to get\r\n                the full effect. The functionality was much easier to handle\r\n                than imagining what we wanted our website to look like, even\r\n                with references.\r\n              </p>\r\n              <a\r\n                href=\"https://n0tfacebook.herokuapp.com/\"\r\n                className=\"card-link\"\r\n              >\r\n                n0tfacebook v1.0\r\n              </a>\r\n              <p>\r\n                <a\r\n                  href=\"https://github.com/pravinsisowath/notFacebook\"\r\n                  className=\"card-link\"\r\n                >\r\n                  Github Repo\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h3>Works</h3>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          <div\r\n            className=\"card overflow-auto\"\r\n            style={{ maxWidth: \"80%\", maxHeight: \"80%\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Employee Tracker</h5>\r\n              <p className=\"card-text\">\r\n                When we were introduced to node.js for this we were shown how to\r\n                work through the terminal and create applications that worked\r\n                with node.js + a database. For this application we used the\r\n                terminal to prompt a user and from the user responses create and\r\n                display a employee directory\r\n              </p>\r\n\r\n              <p>\r\n                <a\r\n                  href=\"https://github.com/alanhlee/employeeTracker\"\r\n                  className=\"card-link\"\r\n                >\r\n                  Github Repo\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <div\r\n            className=\"card overflow-auto\"\r\n            style={{ maxWidth: \"80%\", maxHeight: \"80%\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Node Express Handlebars</h5>\r\n              <p className=\"card-text\">\r\n                For this application we were shown how to use tech (handlebars)\r\n                that handles the middle ground between basic and complex\r\n                applications. Again connecting the front end and the backend.\r\n              </p>\r\n              <a\r\n                href=\"https://burgersdevoured11.herokuapp.com/\"\r\n                className=\"card-link\"\r\n              >\r\n                Burger Application v1.0\r\n              </a>\r\n              <p>\r\n                <a\r\n                  href=\"https://github.com/alanhlee/burger\"\r\n                  className=\"card-link\"\r\n                >\r\n                  Github Repo\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          <div\r\n            className=\"card overflow-auto\"\r\n            style={{ maxWidth: \"80%\", maxHeight: \"80%\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">PWA</h5>\r\n              <p className=\"card-text\">\r\n                Learning about progressive web applications, I was shown how to\r\n                make a PWA, making sure standards were up to par. Understanding\r\n                components that make a PWA and why they are in place. If you\r\n                open the link to the website open up your element inspector you\r\n                may check the lighthouse score given on said application.\r\n              </p>\r\n              <a\r\n                href=\"https://mysterious-ocean-33099.herokuapp.com/\"\r\n                className=\"card-link\"\r\n              >\r\n                PWA application\r\n              </a>\r\n\r\n              <p>\r\n                <a\r\n                  href=\"https://github.com/alanhlee/pwaBudgetTrack\"\r\n                  className=\"card-link\"\r\n                >\r\n                  Github Repo\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <div\r\n            className=\"card overflow-auto\"\r\n            style={{ maxWidth: \"80%\", maxHeight: \"80%\" }}\r\n          >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Code Quiz</h5>\r\n              <p className=\"card-text\">\r\n                This was our very first application I created with the limited\r\n                knowledge I had in coding (2 weeks) I was able to produce an\r\n                application that took an array of questions and kept scores for\r\n                a user also displaying high scores\r\n              </p>\r\n              <a\r\n                href=\"https://alanhlee.github.io/CodeQuiz/\"\r\n                className=\"card-link\"\r\n              >\r\n                Code Quiz v1.0\r\n              </a>\r\n              <p>\r\n                <a\r\n                  href=\"https://github.com/alanhlee/CodeQuiz\"\r\n                  className=\"card-link\"\r\n                >\r\n                  Github Repo\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-1\">\r\n            <Card />\r\n          </div>\r\n          <div className=\"col-lg-1\">\r\n            <Card2 />\r\n          </div>\r\n          <div className=\"col-lg-1\">\r\n            <Card2 />\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport './Jumbotron.css'\r\n\r\nconst Jumbotron = () => {\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">Hello, world!</h1>\r\n        <p className=\"lead\">\r\n          My name is Alan and I'm currently in a full-stack coding bootcamp and here is my portfolio where you will be able to navigate my finished applications/what I'm currently working on/my interests\r\n        </p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Navbar from './components/Navbar'\r\nimport Jumbotron from './components/Jumbotron'\r\nimport Card from './components/Card'\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <Jumbotron />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Navbar from '../../components/Navbar'\r\n\r\nfunction Contact() {\r\n  return (\r\n    <>\r\n      <form>\r\n  <div className=\"form-group\">\r\n    <label for=\"exampleFormControlInput1\">Email address</label>\r\n    <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label for=\"exampleFormControlSelect1\">I'm an...</label>\r\n    <select className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n      <option>Employer</option>\r\n      <option>Instructor</option>\r\n      <option>Contractor</option>\r\n    </select>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label for=\"exampleFormControlTextarea1\">Message:</label>\r\n    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n  </div>\r\n</form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <ul class=\"nav justify-content-center\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" href=\"https://github.com/alanhlee\">\r\n            Github\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          \r\n           <a\r\n            class=\"nav-link\"\r\n            href=\"alanleeone@gmail.com\"\r\n          >\r\n            Email\r\n            </a>\r\n          \r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a\r\n            class=\"nav-link\"\r\n            href=\"https://www.linkedin.com/feed/?trk=guest_homepage-basic_nav-header-signin\"\r\n          >\r\n            Linkedin\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Portfolio from \"./pages/Portfolio\";\r\nimport About from \"./About.js\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Footer from \"./components/Footer\";\r\nimport './App.css'\r\n\r\n// import React from 'react';\r\n// import './App.css';\r\nimport Navbar from \"./components/Navbar\";\r\n// import Jumbotron from './components/Jumbotron'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router basename='/reactportfolio'>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/portfolio\">\r\n            <Portfolio />\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n        </Switch>\r\n        <Footer id=\"footer\" />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\n// function Home() {\r\n//   return <h2>Home</h2>;\r\n// }\r\n\r\n// function About() {\r\n//   return <h2>About</h2>;\r\n// }\r\n\r\n// function Users() {\r\n//   return <h2>Users</h2>;\r\n// }\r\n\r\n// function App() {\r\n//   return (\r\n//     <>\r\n//       <Navbar />\r\n//       <Jumbotron />\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}